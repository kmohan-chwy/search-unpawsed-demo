[{"/home/ec2-user/SageMaker/AmazonSageMaker-karthik-sandbox-repo/search-unpawsed-demo/src/index.js":"1","/home/ec2-user/SageMaker/AmazonSageMaker-karthik-sandbox-repo/search-unpawsed-demo/src/App.js":"2","/home/ec2-user/SageMaker/AmazonSageMaker-karthik-sandbox-repo/search-unpawsed-demo/src/reportWebVitals.js":"3"},{"size":535,"mtime":1686207117952,"results":"4","hashOfConfig":"5"},{"size":2150,"mtime":1686207117952,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1686207117952,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"103qwg1",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/SageMaker/AmazonSageMaker-karthik-sandbox-repo/search-unpawsed-demo/src/index.js",[],[],"/home/ec2-user/SageMaker/AmazonSageMaker-karthik-sandbox-repo/search-unpawsed-demo/src/App.js",["18"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nfunction App() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleSearch = async () => {\n    setLoading(true);\n    //TODO: remove this line after testing\n    await new Promise(resolve => setTimeout(resolve, 2000));\n\n    try {\n      const response = await axios.get(`/api/search?query=${searchText}`);\n      setResults(response.data || []);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const truncateTitle = (title, limit) => {\n    if (title.length > limit) {\n      return title.slice(0, limit) + '...';\n    }\n    return title;\n  };\n\n\n  return (\n    <div className=\"container\">\n      <header>\n      <div className=\"header-content\">\n      <span className=\"header-icon\"></span> \n        <h1 className=\"header-title\"> Demo for AI chat </h1>\n        </div>\n      </header>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          placeholder=\"Enter search text\"\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      {loading ? (\n        <div className=\"loader\">\n          <span className=\"loader-text\">Loading...</span>\n        </div>\n      ) : (\n        <div className=\"result-grid\">\n        {results.map((result, index) => (\n          <div className=\"result-card\" key={index}>\n            <div className=\"result-image\">\n              <img src={result.imageUrl} alt=\"Result Image\" />\n            </div>\n            <p className=\"result-title\">{truncateTitle(result.resultText, 100)}</p>\n            \n          </div>\n        ))}\n      </div>\n        // <ul>\n        //   {results.map((result, index) => (\n        //     <li key={index}>\n        //       <img src={result.imageUrl} alt=\"\" />\n        //       <p>{result.resultText}</p>\n        //     </li>\n        //   ))}\n        // </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/home/ec2-user/SageMaker/AmazonSageMaker-karthik-sandbox-repo/search-unpawsed-demo/src/reportWebVitals.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":59,"column":15,"nodeType":"21","endLine":59,"endColumn":63},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]